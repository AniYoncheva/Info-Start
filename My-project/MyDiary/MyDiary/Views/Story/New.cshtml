@model MyDiary.Models.Story

<div class="box">

    @using (Html.BeginForm("New", "Story", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Create new story</h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateOfCreate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DateOfCreate, new { @class = "datepicker" })
                    @Html.ValidationMessageFor(model => model.DateOfCreate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control rb-rating", id = "input-id" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    <input class="filestyle" data-buttonName="btn-primary" type="file" name="Picture" value="Picture" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-1 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    }
</div>

